### Swift dependencies file v0 ###
provides-top-level:
- "SequenceExpressionFolding"
provides-nominal:
- "4Sema25SequenceExpressionFoldingV"
provides-member:
- ["4Sema25SequenceExpressionFoldingV", ""]
provides-dynamic-lookup:
depends-top-level:
- !private "!"
- !private "+"
- !private "+="
- !private "<"
- !private "=="
- !private ">="
- !private "ASTUnit"
- "ASTUnitCollection"
- !private "ASTVisitor"
- !private "Array"
- !private "AssignmentOperatorExpression"
- !private "AssignmentPrecedence"
- !private "BinaryOperatorExpression"
- "Bool"
- !private "BooleanLiteralType"
- "CastingPrecedence"
- "ClosureExpression"
- "CodeBlock"
- !private "Condition"
- "ConstantDeclaration"
- !private "DictionaryEntry"
- "DoStatement"
- !private "Expression"
- !private "ExpressionPattern"
- "FoldingVisitor"
- "ForInStatement"
- "FunctionCallExpression"
- "FunctionDeclaration"
- !private "FunctionSignature"
- "GuardStatement"
- "IfStatement"
- "InitializerDeclaration"
- "LiteralExpression"
- "ParenthesizedExpression"
- !private "PatternInitializer"
- "ProtocolDeclaration"
- "RepeatWhileStatement"
- "ReturnStatement"
- "SelfExpression"
- "SequenceExpression"
- "SequenceExpressionFolding"
- !private "Statement"
- !private "Statements"
- !private "String"
- !private "StringLiteralType"
- !private "SubscriptArgument"
- "SubscriptDeclaration"
- "SubscriptExpression"
- "SuperclassExpression"
- "SwitchStatement"
- !private "TernaryConditionalOperatorExpression"
- "ThrowStatement"
- "TopLevelDeclaration"
- "TryOperatorExpression"
- "TupleExpression"
- !private "TypeCastingOperatorExpression"
- !private "UnicodeScalarType"
- "VariableDeclaration"
- "WhileStatement"
- !private "debugPrint"
- !private "fatalError"
- !private "foldElements"
- !private "foldElementsContainSeqExpr"
- !private "foldElementsForAssignment"
- !private "foldElementsForDefault"
- !private "foldElementsForTernary"
- !private "foldElementsForTypeCasting"
- !private "foldExpression"
- !private "foldSequenceExpression"
depends-member:
- !private ["3AST7ASTNodeC", "Case"]
- !private ["3AST7ASTNodeC", "CatchClause"]
- !private ["3AST7ASTNodeC", "Element"]
- !private ["3AST7ASTNodeC", "InitializerMember"]
- !private ["3AST7ASTNodeC", "MethodMember"]
- !private ["3AST7ASTNodeC", "SubscriptMember"]
- !private ["3AST7ASTNodeC", "argumentClause"]
- !private ["3AST7ASTNodeC", "arguments"]
- !private ["3AST7ASTNodeC", "body"]
- !private ["3AST7ASTNodeC", "cases"]
- !private ["3AST7ASTNodeC", "catchClauses"]
- !private ["3AST7ASTNodeC", "collection"]
- !private ["3AST7ASTNodeC", "conditionExpression"]
- !private ["3AST7ASTNodeC", "conditionList"]
- !private ["3AST7ASTNodeC", "elementList"]
- !private ["3AST7ASTNodeC", "elements"]
- !private ["3AST7ASTNodeC", "expression"]
- !private ["3AST7ASTNodeC", "foldedSequenceExpression"]
- !private ["3AST7ASTNodeC", "initializerList"]
- !private ["3AST7ASTNodeC", "item"]
- !private ["3AST7ASTNodeC", "kind"]
- !private ["3AST7ASTNodeC", "lexicalParent"]
- !private ["3AST7ASTNodeC", "members"]
- !private ["3AST7ASTNodeC", "parameterList"]
- !private ["3AST7ASTNodeC", "replaceArgument"]
- !private ["3AST7ASTNodeC", "replaceBody"]
- !private ["3AST7ASTNodeC", "replaceCase"]
- !private ["3AST7ASTNodeC", "replaceCatchClause"]
- !private ["3AST7ASTNodeC", "replaceCollection"]
- !private ["3AST7ASTNodeC", "replaceCondition"]
- !private ["3AST7ASTNodeC", "replaceElement"]
- !private ["3AST7ASTNodeC", "replaceExpression"]
- !private ["3AST7ASTNodeC", "replaceInitialize"]
- !private ["3AST7ASTNodeC", "replaceMember"]
- !private ["3AST7ASTNodeC", "replaceParameter"]
- !private ["3AST7ASTNodeC", "replaceSignature"]
- !private ["3AST7ASTNodeC", "replaceStatement"]
- !private ["3AST7ASTNodeC", "replaceWhereClause"]
- !private ["3AST7ASTNodeC", "reset"]
- !private ["3AST7ASTNodeC", "setSourceRange"]
- !private ["3AST7ASTNodeC", "signature"]
- !private ["3AST7ASTNodeC", "statements"]
- !private ["3AST7ASTNodeC", "textDescription"]
- !private ["3AST14ASTNodeContextP", "Case"]
- !private ["3AST14ASTNodeContextP", "CatchClause"]
- !private ["3AST14ASTNodeContextP", "Element"]
- !private ["3AST14ASTNodeContextP", "InitializerMember"]
- !private ["3AST14ASTNodeContextP", "MethodMember"]
- !private ["3AST14ASTNodeContextP", "SubscriptMember"]
- !private ["3AST14ASTNodeContextP", "argumentClause"]
- !private ["3AST14ASTNodeContextP", "arguments"]
- !private ["3AST14ASTNodeContextP", "body"]
- !private ["3AST14ASTNodeContextP", "cases"]
- !private ["3AST14ASTNodeContextP", "catchClauses"]
- !private ["3AST14ASTNodeContextP", "collection"]
- !private ["3AST14ASTNodeContextP", "conditionExpression"]
- !private ["3AST14ASTNodeContextP", "conditionList"]
- !private ["3AST14ASTNodeContextP", "elementList"]
- !private ["3AST14ASTNodeContextP", "elements"]
- !private ["3AST14ASTNodeContextP", "expression"]
- !private ["3AST14ASTNodeContextP", "foldedSequenceExpression"]
- !private ["3AST14ASTNodeContextP", "init"]
- !private ["3AST14ASTNodeContextP", "initializerList"]
- !private ["3AST14ASTNodeContextP", "item"]
- !private ["3AST14ASTNodeContextP", "kind"]
- !private ["3AST14ASTNodeContextP", "lexicalParent"]
- !private ["3AST14ASTNodeContextP", "members"]
- !private ["3AST14ASTNodeContextP", "parameterList"]
- !private ["3AST14ASTNodeContextP", "replaceArgument"]
- !private ["3AST14ASTNodeContextP", "replaceBody"]
- !private ["3AST14ASTNodeContextP", "replaceCase"]
- !private ["3AST14ASTNodeContextP", "replaceCatchClause"]
- !private ["3AST14ASTNodeContextP", "replaceCollection"]
- !private ["3AST14ASTNodeContextP", "replaceCondition"]
- !private ["3AST14ASTNodeContextP", "replaceElement"]
- !private ["3AST14ASTNodeContextP", "replaceExpression"]
- !private ["3AST14ASTNodeContextP", "replaceInitialize"]
- !private ["3AST14ASTNodeContextP", "replaceMember"]
- !private ["3AST14ASTNodeContextP", "replaceParameter"]
- !private ["3AST14ASTNodeContextP", "replaceSignature"]
- !private ["3AST14ASTNodeContextP", "replaceStatement"]
- !private ["3AST14ASTNodeContextP", "replaceWhereClause"]
- !private ["3AST14ASTNodeContextP", "reset"]
- !private ["3AST14ASTNodeContextP", "setSourceRange"]
- !private ["3AST14ASTNodeContextP", "signature"]
- !private ["3AST14ASTNodeContextP", "sourceRange"]
- !private ["3AST14ASTNodeContextP", "statements"]
- !private ["3AST14ASTNodeContextP", "textDescription"]
- !private ["3AST20ASTTextRepresentableP", "Case"]
- !private ["3AST20ASTTextRepresentableP", "CatchClause"]
- !private ["3AST20ASTTextRepresentableP", "Element"]
- !private ["3AST20ASTTextRepresentableP", "InitializerMember"]
- !private ["3AST20ASTTextRepresentableP", "Item"]
- !private ["3AST20ASTTextRepresentableP", "MethodMember"]
- !private ["3AST20ASTTextRepresentableP", "Parameter"]
- !private ["3AST20ASTTextRepresentableP", "SubscriptMember"]
- !private ["3AST20ASTTextRepresentableP", "argumentClause"]
- !private ["3AST20ASTTextRepresentableP", "arguments"]
- !private ["3AST20ASTTextRepresentableP", "assignmentOperator"]
- !private ["3AST20ASTTextRepresentableP", "attributes"]
- !private ["3AST20ASTTextRepresentableP", "binaryOperator"]
- !private ["3AST20ASTTextRepresentableP", "body"]
- ["3AST20ASTTextRepresentableP", "case"]
- !private ["3AST20ASTTextRepresentableP", "cases"]
- !private ["3AST20ASTTextRepresentableP", "catchClauses"]
- !private ["3AST20ASTTextRepresentableP", "codeBlock"]
- !private ["3AST20ASTTextRepresentableP", "collection"]
- !private ["3AST20ASTTextRepresentableP", "conditionExpression"]
- !private ["3AST20ASTTextRepresentableP", "conditionList"]
- ["3AST20ASTTextRepresentableP", "default"]
- !private ["3AST20ASTTextRepresentableP", "defaultArgumentClause"]
- !private ["3AST20ASTTextRepresentableP", "elementList"]
- !private ["3AST20ASTTextRepresentableP", "elements"]
- ["3AST20ASTTextRepresentableP", "expression"]
- !private ["3AST20ASTTextRepresentableP", "externalName"]
- !private ["3AST20ASTTextRepresentableP", "foldedSequenceExpression"]
- !private ["3AST20ASTTextRepresentableP", "genericParameter"]
- !private ["3AST20ASTTextRepresentableP", "genericWhere"]
- !private ["3AST20ASTTextRepresentableP", "getterSetterKeywordBlock"]
- !private ["3AST20ASTTextRepresentableP", "identifier"]
- !private ["3AST20ASTTextRepresentableP", "init"]
- ["3AST20ASTTextRepresentableP", "initializer"]
- !private ["3AST20ASTTextRepresentableP", "initializerExpression"]
- ["3AST20ASTTextRepresentableP", "initializerList"]
- !private ["3AST20ASTTextRepresentableP", "item"]
- !private ["3AST20ASTTextRepresentableP", "key"]
- !private ["3AST20ASTTextRepresentableP", "kind"]
- !private ["3AST20ASTTextRepresentableP", "let"]
- !private ["3AST20ASTTextRepresentableP", "lexicalParent"]
- !private ["3AST20ASTTextRepresentableP", "localName"]
- !private ["3AST20ASTTextRepresentableP", "members"]
- ["3AST20ASTTextRepresentableP", "method"]
- !private ["3AST20ASTTextRepresentableP", "modifiers"]
- !private ["3AST20ASTTextRepresentableP", "name"]
- ["3AST20ASTTextRepresentableP", "namedExpression"]
- !private ["3AST20ASTTextRepresentableP", "parameterList"]
- !private ["3AST20ASTTextRepresentableP", "pattern"]
- !private ["3AST20ASTTextRepresentableP", "replaceArgument"]
- !private ["3AST20ASTTextRepresentableP", "replaceBody"]
- !private ["3AST20ASTTextRepresentableP", "replaceCase"]
- !private ["3AST20ASTTextRepresentableP", "replaceCatchClause"]
- !private ["3AST20ASTTextRepresentableP", "replaceCollection"]
- !private ["3AST20ASTTextRepresentableP", "replaceCondition"]
- !private ["3AST20ASTTextRepresentableP", "replaceElement"]
- !private ["3AST20ASTTextRepresentableP", "replaceExpression"]
- !private ["3AST20ASTTextRepresentableP", "replaceInitialize"]
- !private ["3AST20ASTTextRepresentableP", "replaceMember"]
- !private ["3AST20ASTTextRepresentableP", "replaceParameter"]
- !private ["3AST20ASTTextRepresentableP", "replaceSignature"]
- !private ["3AST20ASTTextRepresentableP", "replaceStatement"]
- !private ["3AST20ASTTextRepresentableP", "replaceWhereClause"]
- !private ["3AST20ASTTextRepresentableP", "reset"]
- !private ["3AST20ASTTextRepresentableP", "result"]
- !private ["3AST20ASTTextRepresentableP", "resultAttributes"]
- !private ["3AST20ASTTextRepresentableP", "resultType"]
- !private ["3AST20ASTTextRepresentableP", "setSourceRange"]
- !private ["3AST20ASTTextRepresentableP", "signature"]
- !private ["3AST20ASTTextRepresentableP", "sourceRange"]
- !private ["3AST20ASTTextRepresentableP", "statements"]
- ["3AST20ASTTextRepresentableP", "subscript"]
- !private ["3AST20ASTTextRepresentableP", "ternaryConditionalOperator"]
- !private ["3AST20ASTTextRepresentableP", "textDescription"]
- !private ["3AST20ASTTextRepresentableP", "throwsKind"]
- !private ["3AST20ASTTextRepresentableP", "typeAnnotation"]
- !private ["3AST20ASTTextRepresentableP", "typeCast"]
- !private ["3AST20ASTTextRepresentableP", "typeCheck"]
- !private ["3AST20ASTTextRepresentableP", "typeConditionalCast"]
- !private ["3AST20ASTTextRepresentableP", "typeForcedCast"]
- !private ["3AST20ASTTextRepresentableP", "value"]
- !private ["3AST20ASTTextRepresentableP", "var"]
- !private ["3AST20ASTTextRepresentableP", "whereExpression"]
- ["3AST20ASTTextRepresentableP", "willSetDidSetBlock"]
- !private ["3AST7ASTUnitP", "foldedSequenceExpression"]
- !private ["3AST7ASTUnitP", "replaceStatement"]
- !private ["3AST7ASTUnitP", "statements"]
- !private ["3AST7ASTUnitP", "translationUnit"]
- !private ["3AST10ASTVisitorP", "DictionaryEntry"]
- !private ["3AST10ASTVisitorP", "DoStatement"]
- !private ["3AST10ASTVisitorP", "ExpressionPattern"]
- !private ["3AST10ASTVisitorP", "FunctionSignature"]
- !private ["3AST10ASTVisitorP", "PatternInitializer"]
- !private ["3AST10ASTVisitorP", "ProtocolDeclaration"]
- !private ["3AST10ASTVisitorP", "SubscriptArgument"]
- !private ["3AST10ASTVisitorP", "SwitchStatement"]
- !private ["3AST10ASTVisitorP", "TupleExpression"]
- !private ["3AST10ASTVisitorP", "debugPrint"]
- !private ["3AST10ASTVisitorP", "foldCondition"]
- !private ["3AST10ASTVisitorP", "foldExpression"]
- !private ["3AST10ASTVisitorP", "foldFunctionSignature"]
- !private ["3AST10ASTVisitorP", "foldFunctionSignatureParameter"]
- !private ["3AST10ASTVisitorP", "foldSequenceExpression"]
- !private ["3AST10ASTVisitorP", "foldStatements"]
- ["3AST10ASTVisitorP", "init"]
- !private ["3AST10ASTVisitorP", "traverse"]
- !private ["3AST10ASTVisitorP", "visit"]
- !private ["3AST10ASTVisitorP", ""]
- ["3AST22FunctionCallExpressionC8ArgumentO", "expression"]
- ["3AST22FunctionCallExpressionC8ArgumentO", "namedExpression"]
- !private ["Sa", "append"]
- !private ["Sa", "contains"]
- !private ["Sa", "count"]
- !private ["Sa", "forEach"]
- !private ["Sa", "indices"]
- !private ["Sa", "last"]
- !private ["Sa", "map"]
- !private ["Sa", "removeLast"]
- !private ["Sa", "subscript"]
- !private ["3AST28AssignmentOperatorExpressionC", "init"]
- !private ["3AST28AssignmentOperatorExpressionC", "setSourceRange"]
- !private ["s23BidirectionalCollectionP", "append"]
- !private ["s23BidirectionalCollectionP", "contains"]
- !private ["s23BidirectionalCollectionP", "count"]
- !private ["s23BidirectionalCollectionP", "forEach"]
- !private ["s23BidirectionalCollectionP", "indices"]
- !private ["s23BidirectionalCollectionP", "init"]
- !private ["s23BidirectionalCollectionP", "last"]
- !private ["s23BidirectionalCollectionP", "map"]
- !private ["s23BidirectionalCollectionP", "removeLast"]
- !private ["s23BidirectionalCollectionP", "subscript"]
- !private ["3AST16BinaryExpressionP", "Element"]
- !private ["3AST16BinaryExpressionP", "elements"]
- !private ["3AST16BinaryExpressionP", "init"]
- !private ["3AST16BinaryExpressionP", "lexicalParent"]
- !private ["3AST16BinaryExpressionP", "setSourceRange"]
- !private ["3AST24BinaryOperatorExpressionC", "init"]
- !private ["3AST24BinaryOperatorExpressionC", "setSourceRange"]
- ["3AST19VariableDeclarationC4BodyO", "initializerList"]
- ["3AST19VariableDeclarationC4BodyO", "willSetDidSetBlock"]
- !private ["Sb", "_getBuiltinLogicValue"]
- !private ["s7CVarArgP", "append"]
- !private ["s7CVarArgP", "contains"]
- !private ["s7CVarArgP", "count"]
- !private ["s7CVarArgP", "forEach"]
- !private ["s7CVarArgP", "indices"]
- !private ["s7CVarArgP", "init"]
- !private ["s7CVarArgP", "last"]
- !private ["s7CVarArgP", "map"]
- !private ["s7CVarArgP", "removeLast"]
- !private ["s7CVarArgP", "subscript"]
- !private ["3AST15SwitchStatementC4CaseO", "Item"]
- ["3AST15SwitchStatementC4CaseO", "case"]
- ["3AST15SwitchStatementC4CaseO", "default"]
- !private ["3AST11DoStatementC11CatchClauseV", "codeBlock"]
- !private ["3AST11DoStatementC11CatchClauseV", "init"]
- !private ["3AST11DoStatementC11CatchClauseV", "pattern"]
- !private ["3AST11DoStatementC11CatchClauseV", "whereExpression"]
- !private ["3AST17ClosureExpressionC", "replaceStatement"]
- !private ["3AST17ClosureExpressionC", "statements"]
- !private ["3AST9CodeBlockC", "replaceStatement"]
- !private ["3AST9CodeBlockC", "statements"]
- !private ["s10CollectionP", "append"]
- !private ["s10CollectionP", "contains"]
- !private ["s10CollectionP", "count"]
- !private ["s10CollectionP", "forEach"]
- !private ["s10CollectionP", "indices"]
- !private ["s10CollectionP", "init"]
- !private ["s10CollectionP", "last"]
- !private ["s10CollectionP", "map"]
- !private ["s10CollectionP", "removeLast"]
- !private ["s10CollectionP", "subscript"]
- !private ["s10ComparableP", "init"]
- !private ["3AST9ConditionO", "case"]
- !private ["3AST9ConditionO", "expression"]
- !private ["3AST9ConditionO", "let"]
- !private ["3AST9ConditionO", "var"]
- !private ["3AST19ConstantDeclarationC", "initializerList"]
- !private ["3AST19ConstantDeclarationC", "replaceInitialize"]
- !private ["s28CustomDebugStringConvertibleP", "append"]
- !private ["s28CustomDebugStringConvertibleP", "contains"]
- !private ["s28CustomDebugStringConvertibleP", "count"]
- !private ["s28CustomDebugStringConvertibleP", "forEach"]
- !private ["s28CustomDebugStringConvertibleP", "indices"]
- !private ["s28CustomDebugStringConvertibleP", "init"]
- !private ["s28CustomDebugStringConvertibleP", "last"]
- !private ["s28CustomDebugStringConvertibleP", "map"]
- !private ["s28CustomDebugStringConvertibleP", "removeLast"]
- !private ["s28CustomDebugStringConvertibleP", "subscript"]
- !private ["s29CustomPlaygroundQuickLookableP", "_getBuiltinLogicValue"]
- !private ["s29CustomPlaygroundQuickLookableP", "init"]
- !private ["s17CustomReflectableP", "_getBuiltinLogicValue"]
- !private ["s17CustomReflectableP", "append"]
- !private ["s17CustomReflectableP", "contains"]
- !private ["s17CustomReflectableP", "count"]
- !private ["s17CustomReflectableP", "forEach"]
- !private ["s17CustomReflectableP", "indices"]
- !private ["s17CustomReflectableP", "init"]
- !private ["s17CustomReflectableP", "last"]
- !private ["s17CustomReflectableP", "map"]
- !private ["s17CustomReflectableP", "removeLast"]
- !private ["s17CustomReflectableP", "subscript"]
- !private ["s23CustomStringConvertibleP", "Case"]
- !private ["s23CustomStringConvertibleP", "CatchClause"]
- !private ["s23CustomStringConvertibleP", "Element"]
- !private ["s23CustomStringConvertibleP", "InitializerMember"]
- !private ["s23CustomStringConvertibleP", "Item"]
- !private ["s23CustomStringConvertibleP", "MethodMember"]
- !private ["s23CustomStringConvertibleP", "Parameter"]
- !private ["s23CustomStringConvertibleP", "SubscriptMember"]
- !private ["s23CustomStringConvertibleP", "_getBuiltinLogicValue"]
- !private ["s23CustomStringConvertibleP", "append"]
- !private ["s23CustomStringConvertibleP", "argumentClause"]
- !private ["s23CustomStringConvertibleP", "arguments"]
- !private ["s23CustomStringConvertibleP", "assignmentOperator"]
- !private ["s23CustomStringConvertibleP", "attributes"]
- !private ["s23CustomStringConvertibleP", "binaryOperator"]
- !private ["s23CustomStringConvertibleP", "body"]
- ["s23CustomStringConvertibleP", "case"]
- !private ["s23CustomStringConvertibleP", "cases"]
- !private ["s23CustomStringConvertibleP", "catchClauses"]
- !private ["s23CustomStringConvertibleP", "codeBlock"]
- !private ["s23CustomStringConvertibleP", "collection"]
- !private ["s23CustomStringConvertibleP", "conditionExpression"]
- !private ["s23CustomStringConvertibleP", "conditionList"]
- !private ["s23CustomStringConvertibleP", "contains"]
- !private ["s23CustomStringConvertibleP", "count"]
- ["s23CustomStringConvertibleP", "default"]
- !private ["s23CustomStringConvertibleP", "defaultArgumentClause"]
- !private ["s23CustomStringConvertibleP", "elementList"]
- !private ["s23CustomStringConvertibleP", "elements"]
- !private ["s23CustomStringConvertibleP", "end"]
- ["s23CustomStringConvertibleP", "expression"]
- !private ["s23CustomStringConvertibleP", "externalName"]
- !private ["s23CustomStringConvertibleP", "foldedSequenceExpression"]
- !private ["s23CustomStringConvertibleP", "forEach"]
- !private ["s23CustomStringConvertibleP", "genericParameter"]
- !private ["s23CustomStringConvertibleP", "genericWhere"]
- !private ["s23CustomStringConvertibleP", "getterSetterKeywordBlock"]
- !private ["s23CustomStringConvertibleP", "identifier"]
- !private ["s23CustomStringConvertibleP", "indices"]
- !private ["s23CustomStringConvertibleP", "init"]
- ["s23CustomStringConvertibleP", "initializer"]
- !private ["s23CustomStringConvertibleP", "initializerExpression"]
- ["s23CustomStringConvertibleP", "initializerList"]
- !private ["s23CustomStringConvertibleP", "item"]
- !private ["s23CustomStringConvertibleP", "key"]
- !private ["s23CustomStringConvertibleP", "kind"]
- !private ["s23CustomStringConvertibleP", "last"]
- !private ["s23CustomStringConvertibleP", "let"]
- !private ["s23CustomStringConvertibleP", "lexicalParent"]
- !private ["s23CustomStringConvertibleP", "localName"]
- !private ["s23CustomStringConvertibleP", "map"]
- !private ["s23CustomStringConvertibleP", "members"]
- ["s23CustomStringConvertibleP", "method"]
- !private ["s23CustomStringConvertibleP", "modifiers"]
- !private ["s23CustomStringConvertibleP", "name"]
- ["s23CustomStringConvertibleP", "namedExpression"]
- !private ["s23CustomStringConvertibleP", "parameterList"]
- !private ["s23CustomStringConvertibleP", "pattern"]
- !private ["s23CustomStringConvertibleP", "removeLast"]
- !private ["s23CustomStringConvertibleP", "replaceArgument"]
- !private ["s23CustomStringConvertibleP", "replaceBody"]
- !private ["s23CustomStringConvertibleP", "replaceCase"]
- !private ["s23CustomStringConvertibleP", "replaceCatchClause"]
- !private ["s23CustomStringConvertibleP", "replaceCollection"]
- !private ["s23CustomStringConvertibleP", "replaceCondition"]
- !private ["s23CustomStringConvertibleP", "replaceElement"]
- !private ["s23CustomStringConvertibleP", "replaceExpression"]
- !private ["s23CustomStringConvertibleP", "replaceInitialize"]
- !private ["s23CustomStringConvertibleP", "replaceMember"]
- !private ["s23CustomStringConvertibleP", "replaceParameter"]
- !private ["s23CustomStringConvertibleP", "replaceSignature"]
- !private ["s23CustomStringConvertibleP", "replaceStatement"]
- !private ["s23CustomStringConvertibleP", "replaceWhereClause"]
- !private ["s23CustomStringConvertibleP", "reset"]
- !private ["s23CustomStringConvertibleP", "result"]
- !private ["s23CustomStringConvertibleP", "resultAttributes"]
- !private ["s23CustomStringConvertibleP", "resultType"]
- !private ["s23CustomStringConvertibleP", "setSourceRange"]
- !private ["s23CustomStringConvertibleP", "signature"]
- !private ["s23CustomStringConvertibleP", "sourceRange"]
- !private ["s23CustomStringConvertibleP", "start"]
- !private ["s23CustomStringConvertibleP", "statements"]
- ["s23CustomStringConvertibleP", "subscript"]
- !private ["s23CustomStringConvertibleP", "ternaryConditionalOperator"]
- !private ["s23CustomStringConvertibleP", "textDescription"]
- !private ["s23CustomStringConvertibleP", "throwsKind"]
- !private ["s23CustomStringConvertibleP", "typeAnnotation"]
- !private ["s23CustomStringConvertibleP", "typeCast"]
- !private ["s23CustomStringConvertibleP", "typeCheck"]
- !private ["s23CustomStringConvertibleP", "typeConditionalCast"]
- !private ["s23CustomStringConvertibleP", "typeForcedCast"]
- !private ["s23CustomStringConvertibleP", "value"]
- !private ["s23CustomStringConvertibleP", "var"]
- !private ["s23CustomStringConvertibleP", "whereExpression"]
- ["s23CustomStringConvertibleP", "willSetDidSetBlock"]
- !private ["3AST11DeclarationP", "InitializerMember"]
- !private ["3AST11DeclarationP", "MethodMember"]
- !private ["3AST11DeclarationP", "SubscriptMember"]
- !private ["3AST11DeclarationP", "body"]
- !private ["3AST11DeclarationP", "initializerList"]
- !private ["3AST11DeclarationP", "members"]
- !private ["3AST11DeclarationP", "parameterList"]
- !private ["3AST11DeclarationP", "replaceBody"]
- !private ["3AST11DeclarationP", "replaceInitialize"]
- !private ["3AST11DeclarationP", "replaceMember"]
- !private ["3AST11DeclarationP", "replaceParameter"]
- !private ["3AST11DeclarationP", "replaceSignature"]
- !private ["3AST11DeclarationP", "signature"]
- !private ["s9DecodableP", "_getBuiltinLogicValue"]
- !private ["s9DecodableP", "append"]
- !private ["s9DecodableP", "contains"]
- !private ["s9DecodableP", "count"]
- !private ["s9DecodableP", "forEach"]
- !private ["s9DecodableP", "indices"]
- !private ["s9DecodableP", "init"]
- !private ["s9DecodableP", "last"]
- !private ["s9DecodableP", "map"]
- !private ["s9DecodableP", "removeLast"]
- !private ["s9DecodableP", "subscript"]
- !private ["3AST15DictionaryEntryC", "init"]
- !private ["3AST15DictionaryEntryC", "key"]
- !private ["3AST15DictionaryEntryC", "value"]
- !private ["3AST11DoStatementC", "CatchClause"]
- !private ["3AST11DoStatementC", "catchClauses"]
- !private ["3AST11DoStatementC", "replaceCatchClause"]
- !private ["3AST15TupleExpressionC7ElementV", "expression"]
- !private ["3AST15TupleExpressionC7ElementV", "identifier"]
- !private ["3AST15TupleExpressionC7ElementV", "init"]
- !private ["3AST18SequenceExpressionC7ElementO", "assignmentOperator"]
- !private ["3AST18SequenceExpressionC7ElementO", "binaryOperator"]
- !private ["3AST18SequenceExpressionC7ElementO", "expression"]
- !private ["3AST18SequenceExpressionC7ElementO", "ternaryConditionalOperator"]
- !private ["3AST18SequenceExpressionC7ElementO", "typeCast"]
- !private ["3AST18SequenceExpressionC7ElementO", "typeCheck"]
- !private ["3AST18SequenceExpressionC7ElementO", "typeConditionalCast"]
- !private ["3AST18SequenceExpressionC7ElementO", "typeForcedCast"]
- !private ["s9EncodableP", "_getBuiltinLogicValue"]
- !private ["s9EncodableP", "append"]
- !private ["s9EncodableP", "contains"]
- !private ["s9EncodableP", "count"]
- !private ["s9EncodableP", "forEach"]
- !private ["s9EncodableP", "indices"]
- !private ["s9EncodableP", "init"]
- !private ["s9EncodableP", "last"]
- !private ["s9EncodableP", "map"]
- !private ["s9EncodableP", "removeLast"]
- !private ["s9EncodableP", "subscript"]
- !private ["s9EquatableP", "_getBuiltinLogicValue"]
- !private ["s9EquatableP", "end"]
- !private ["s9EquatableP", "init"]
- !private ["s9EquatableP", "start"]
- !private ["s25ExpressibleByArrayLiteralP", "append"]
- !private ["s25ExpressibleByArrayLiteralP", "contains"]
- !private ["s25ExpressibleByArrayLiteralP", "count"]
- !private ["s25ExpressibleByArrayLiteralP", "forEach"]
- !private ["s25ExpressibleByArrayLiteralP", "indices"]
- !private ["s25ExpressibleByArrayLiteralP", "last"]
- !private ["s25ExpressibleByArrayLiteralP", "map"]
- !private ["s25ExpressibleByArrayLiteralP", "removeLast"]
- !private ["s25ExpressibleByArrayLiteralP", "subscript"]
- !private ["s27ExpressibleByBooleanLiteralP", "_getBuiltinLogicValue"]
- !private ["s43ExpressibleByExtendedGraphemeClusterLiteralP", "init"]
- !private ["s26ExpressibleByStringLiteralP", "init"]
- !private ["s33ExpressibleByUnicodeScalarLiteralP", "init"]
- !private ["3AST10ExpressionP", "Element"]
- !private ["3AST10ExpressionP", "argumentClause"]
- !private ["3AST10ExpressionP", "arguments"]
- !private ["3AST10ExpressionP", "elementList"]
- !private ["3AST10ExpressionP", "elements"]
- !private ["3AST10ExpressionP", "expression"]
- !private ["3AST10ExpressionP", "init"]
- !private ["3AST10ExpressionP", "kind"]
- !private ["3AST10ExpressionP", "lexicalParent"]
- !private ["3AST10ExpressionP", "replaceArgument"]
- !private ["3AST10ExpressionP", "replaceElement"]
- !private ["3AST10ExpressionP", "replaceStatement"]
- !private ["3AST10ExpressionP", "reset"]
- !private ["3AST10ExpressionP", "setSourceRange"]
- !private ["3AST10ExpressionP", "sourceRange"]
- !private ["3AST10ExpressionP", "statements"]
- !private ["3AST17ExpressionPatternC", "expression"]
- !private ["3AST17ExpressionPatternC", "init"]
- !private ["3AST14ForInStatementC", "collection"]
- !private ["3AST14ForInStatementC", "item"]
- !private ["3AST14ForInStatementC", "replaceCollection"]
- !private ["3AST14ForInStatementC", "replaceWhereClause"]
- !private ["3AST22FunctionCallExpressionC", "argumentClause"]
- !private ["3AST22FunctionCallExpressionC", "replaceArgument"]
- !private ["3AST19FunctionDeclarationC", "replaceSignature"]
- !private ["3AST19FunctionDeclarationC", "signature"]
- !private ["3AST17FunctionSignatureV", "Parameter"]
- !private ["3AST17FunctionSignatureV", "init"]
- !private ["3AST17FunctionSignatureV", "parameterList"]
- !private ["3AST17FunctionSignatureV", "result"]
- !private ["3AST17FunctionSignatureV", "throwsKind"]
- !private ["3AST14GuardStatementC", "conditionList"]
- !private ["3AST14GuardStatementC", "replaceCondition"]
- !private ["s8HashableP", "_getBuiltinLogicValue"]
- !private ["s8HashableP", "end"]
- !private ["s8HashableP", "init"]
- !private ["s8HashableP", "start"]
- !private ["3AST11IfStatementC", "conditionList"]
- !private ["3AST11IfStatementC", "replaceCondition"]
- !private ["3AST22InitializerDeclarationC", "parameterList"]
- !private ["3AST22InitializerDeclarationC", "replaceParameter"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "attributes"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "genericParameter"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "genericWhere"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "init"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "kind"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "modifiers"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "parameterList"]
- !private ["3AST19ProtocolDeclarationC17InitializerMemberV", "throwsKind"]
- !private ["3AST14ForInStatementC4ItemV", "whereClause"]
- !private ["3AST15SwitchStatementC4CaseO4ItemV", "init"]
- !private ["3AST15SwitchStatementC4CaseO4ItemV", "pattern"]
- !private ["3AST15SwitchStatementC4CaseO4ItemV", "whereExpression"]
- ["3AST14SelfExpressionC4KindO", "subscript"]
- ["3AST17LiteralExpressionC4KindO", "array"]
- ["3AST17LiteralExpressionC4KindO", "dictionary"]
- ["3AST17LiteralExpressionC4KindO", "interpolatedString"]
- ["3AST20SuperclassExpressionC4KindO", "subscript"]
- ["3AST21TryOperatorExpressionC4KindO", "forced"]
- ["3AST21TryOperatorExpressionC4KindO", "optional"]
- ["3AST21TryOperatorExpressionC4KindO", "try"]
- !private ["3AST29TypeCastingOperatorExpressionC4KindO", "cast"]
- !private ["3AST29TypeCastingOperatorExpressionC4KindO", "check"]
- !private ["3AST29TypeCastingOperatorExpressionC4KindO", "conditionalCast"]
- !private ["3AST29TypeCastingOperatorExpressionC4KindO", "forcedCast"]
- !private ["3AST17LiteralExpressionC", "kind"]
- !private ["3AST17LiteralExpressionC", "reset"]
- !private ["3AST13LocatableNodeC", "Case"]
- !private ["3AST13LocatableNodeC", "CatchClause"]
- !private ["3AST13LocatableNodeC", "Element"]
- !private ["3AST13LocatableNodeC", "InitializerMember"]
- !private ["3AST13LocatableNodeC", "MethodMember"]
- !private ["3AST13LocatableNodeC", "SubscriptMember"]
- !private ["3AST13LocatableNodeC", "argumentClause"]
- !private ["3AST13LocatableNodeC", "arguments"]
- !private ["3AST13LocatableNodeC", "body"]
- !private ["3AST13LocatableNodeC", "cases"]
- !private ["3AST13LocatableNodeC", "catchClauses"]
- !private ["3AST13LocatableNodeC", "collection"]
- !private ["3AST13LocatableNodeC", "conditionExpression"]
- !private ["3AST13LocatableNodeC", "conditionList"]
- !private ["3AST13LocatableNodeC", "elementList"]
- !private ["3AST13LocatableNodeC", "elements"]
- !private ["3AST13LocatableNodeC", "expression"]
- !private ["3AST13LocatableNodeC", "foldedSequenceExpression"]
- !private ["3AST13LocatableNodeC", "initializerList"]
- !private ["3AST13LocatableNodeC", "item"]
- !private ["3AST13LocatableNodeC", "kind"]
- !private ["3AST13LocatableNodeC", "lexicalParent"]
- !private ["3AST13LocatableNodeC", "members"]
- !private ["3AST13LocatableNodeC", "parameterList"]
- !private ["3AST13LocatableNodeC", "replaceArgument"]
- !private ["3AST13LocatableNodeC", "replaceBody"]
- !private ["3AST13LocatableNodeC", "replaceCase"]
- !private ["3AST13LocatableNodeC", "replaceCatchClause"]
- !private ["3AST13LocatableNodeC", "replaceCollection"]
- !private ["3AST13LocatableNodeC", "replaceCondition"]
- !private ["3AST13LocatableNodeC", "replaceElement"]
- !private ["3AST13LocatableNodeC", "replaceExpression"]
- !private ["3AST13LocatableNodeC", "replaceInitialize"]
- !private ["3AST13LocatableNodeC", "replaceMember"]
- !private ["3AST13LocatableNodeC", "replaceParameter"]
- !private ["3AST13LocatableNodeC", "replaceSignature"]
- !private ["3AST13LocatableNodeC", "replaceStatement"]
- !private ["3AST13LocatableNodeC", "replaceWhereClause"]
- !private ["3AST13LocatableNodeC", "reset"]
- !private ["3AST13LocatableNodeC", "setSourceRange"]
- !private ["3AST13LocatableNodeC", "signature"]
- !private ["3AST13LocatableNodeC", "statements"]
- !private ["3AST13LocatableNodeC", "textDescription"]
- !private ["s25LosslessStringConvertibleP", "_getBuiltinLogicValue"]
- !private ["s25LosslessStringConvertibleP", "init"]
- ["3AST19ProtocolDeclarationC6MemberO", "initializer"]
- ["3AST19ProtocolDeclarationC6MemberO", "method"]
- ["3AST19ProtocolDeclarationC6MemberO", "subscript"]
- !private ["3AST19ProtocolDeclarationC12MethodMemberV", "attributes"]
- !private ["3AST19ProtocolDeclarationC12MethodMemberV", "genericParameter"]
- !private ["3AST19ProtocolDeclarationC12MethodMemberV", "genericWhere"]
- !private ["3AST19ProtocolDeclarationC12MethodMemberV", "init"]
- !private ["3AST19ProtocolDeclarationC12MethodMemberV", "modifiers"]
- !private ["3AST19ProtocolDeclarationC12MethodMemberV", "name"]
- !private ["3AST19ProtocolDeclarationC12MethodMemberV", "signature"]
- !private ["s10MirrorPathP", "init"]
- !private ["s17MutableCollectionP", "append"]
- !private ["s17MutableCollectionP", "contains"]
- !private ["s17MutableCollectionP", "count"]
- !private ["s17MutableCollectionP", "forEach"]
- !private ["s17MutableCollectionP", "indices"]
- !private ["s17MutableCollectionP", "last"]
- !private ["s17MutableCollectionP", "map"]
- !private ["s17MutableCollectionP", "removeLast"]
- !private ["s17MutableCollectionP", "subscript"]
- !private ["So8NSCodingP", "init"]
- !private ["So9NSCopyingP", "init"]
- !private ["So21NSItemProviderReadingP", "init"]
- !private ["So21NSItemProviderWritingP", "init"]
- !private ["So16NSMutableCopyingP", "init"]
- !private ["So16NSObjectProtocolP", "init"]
- !private ["So14NSSecureCodingP", "init"]
- !private ["So8NSStringC", "init"]
- !private ["3AST17FunctionSignatureV9ParameterV", "defaultArgumentClause"]
- !private ["3AST17FunctionSignatureV9ParameterV", "externalName"]
- !private ["3AST17FunctionSignatureV9ParameterV", "init"]
- !private ["3AST17FunctionSignatureV9ParameterV", "localName"]
- !private ["3AST17FunctionSignatureV9ParameterV", "typeAnnotation"]
- !private ["3AST23ParenthesizedExpressionC", "expression"]
- !private ["3AST23ParenthesizedExpressionC", "reset"]
- !private ["3AST7PatternP", "expression"]
- !private ["3AST7PatternP", "init"]
- !private ["3AST11PatternBaseC", "expression"]
- !private ["3AST18PatternInitializerV", "init"]
- !private ["3AST18PatternInitializerV", "initializerExpression"]
- !private ["3AST18PatternInitializerV", "pattern"]
- !private ["3AST17PostfixExpressionP", "Element"]
- !private ["3AST17PostfixExpressionP", "argumentClause"]
- !private ["3AST17PostfixExpressionP", "arguments"]
- !private ["3AST17PostfixExpressionP", "elementList"]
- !private ["3AST17PostfixExpressionP", "expression"]
- !private ["3AST17PostfixExpressionP", "kind"]
- !private ["3AST17PostfixExpressionP", "replaceArgument"]
- !private ["3AST17PostfixExpressionP", "replaceElement"]
- !private ["3AST17PostfixExpressionP", "replaceStatement"]
- !private ["3AST17PostfixExpressionP", "reset"]
- !private ["3AST17PostfixExpressionP", "statements"]
- !private ["3AST17PrimaryExpressionP", "Element"]
- !private ["3AST17PrimaryExpressionP", "elementList"]
- !private ["3AST17PrimaryExpressionP", "expression"]
- !private ["3AST17PrimaryExpressionP", "kind"]
- !private ["3AST17PrimaryExpressionP", "replaceElement"]
- !private ["3AST17PrimaryExpressionP", "replaceStatement"]
- !private ["3AST17PrimaryExpressionP", "reset"]
- !private ["3AST17PrimaryExpressionP", "statements"]
- !private ["3AST19ProtocolDeclarationC", "InitializerMember"]
- !private ["3AST19ProtocolDeclarationC", "MethodMember"]
- !private ["3AST19ProtocolDeclarationC", "SubscriptMember"]
- !private ["3AST19ProtocolDeclarationC", "members"]
- !private ["3AST19ProtocolDeclarationC", "replaceMember"]
- !private ["s22RandomAccessCollectionP", "append"]
- !private ["s22RandomAccessCollectionP", "contains"]
- !private ["s22RandomAccessCollectionP", "count"]
- !private ["s22RandomAccessCollectionP", "forEach"]
- !private ["s22RandomAccessCollectionP", "indices"]
- !private ["s22RandomAccessCollectionP", "last"]
- !private ["s22RandomAccessCollectionP", "map"]
- !private ["s22RandomAccessCollectionP", "removeLast"]
- !private ["s22RandomAccessCollectionP", "subscript"]
- !private ["s26RangeReplaceableCollectionP", "append"]
- !private ["s26RangeReplaceableCollectionP", "contains"]
- !private ["s26RangeReplaceableCollectionP", "count"]
- !private ["s26RangeReplaceableCollectionP", "forEach"]
- !private ["s26RangeReplaceableCollectionP", "indices"]
- !private ["s26RangeReplaceableCollectionP", "init"]
- !private ["s26RangeReplaceableCollectionP", "last"]
- !private ["s26RangeReplaceableCollectionP", "map"]
- !private ["s26RangeReplaceableCollectionP", "removeLast"]
- !private ["s26RangeReplaceableCollectionP", "subscript"]
- !private ["3AST20RepeatWhileStatementC", "conditionExpression"]
- !private ["3AST20RepeatWhileStatementC", "replaceCondition"]
- !private ["3AST15ReturnStatementC", "expression"]
- !private ["3AST15ReturnStatementC", "replaceExpression"]
- !private ["3AST14SelfExpressionC", "kind"]
- !private ["3AST14SelfExpressionC", "reset"]
- !private ["s8SequenceP", "append"]
- !private ["s8SequenceP", "contains"]
- !private ["s8SequenceP", "count"]
- !private ["s8SequenceP", "forEach"]
- !private ["s8SequenceP", "indices"]
- !private ["s8SequenceP", "init"]
- !private ["s8SequenceP", "last"]
- !private ["s8SequenceP", "map"]
- !private ["s8SequenceP", "removeLast"]
- !private ["s8SequenceP", "subscript"]
- !private ["3AST18SequenceExpressionC", "Element"]
- !private ["3AST18SequenceExpressionC", "elements"]
- !private ["3AST18SequenceExpressionC", "lexicalParent"]
- !private ["4Sema25SequenceExpressionFoldingV", "ASTUnit"]
- ["4Sema25SequenceExpressionFoldingV", "ASTUnitCollection"]
- ["4Sema25SequenceExpressionFoldingV", "FoldingVisitor"]
- !private ["4Sema25SequenceExpressionFoldingV", "_foldingVisitor"]
- ["4Sema25SequenceExpressionFoldingV", "fold"]
- ["4Sema25SequenceExpressionFoldingV", "init"]
- !private ["6Source0A9LocatableP", "Case"]
- !private ["6Source0A9LocatableP", "CatchClause"]
- !private ["6Source0A9LocatableP", "Element"]
- !private ["6Source0A9LocatableP", "InitializerMember"]
- !private ["6Source0A9LocatableP", "MethodMember"]
- !private ["6Source0A9LocatableP", "SubscriptMember"]
- !private ["6Source0A9LocatableP", "argumentClause"]
- !private ["6Source0A9LocatableP", "arguments"]
- !private ["6Source0A9LocatableP", "body"]
- !private ["6Source0A9LocatableP", "cases"]
- !private ["6Source0A9LocatableP", "catchClauses"]
- !private ["6Source0A9LocatableP", "collection"]
- !private ["6Source0A9LocatableP", "conditionExpression"]
- !private ["6Source0A9LocatableP", "conditionList"]
- !private ["6Source0A9LocatableP", "elementList"]
- !private ["6Source0A9LocatableP", "elements"]
- !private ["6Source0A9LocatableP", "expression"]
- !private ["6Source0A9LocatableP", "foldedSequenceExpression"]
- !private ["6Source0A9LocatableP", "init"]
- !private ["6Source0A9LocatableP", "initializerExpression"]
- !private ["6Source0A9LocatableP", "initializerList"]
- !private ["6Source0A9LocatableP", "item"]
- !private ["6Source0A9LocatableP", "kind"]
- !private ["6Source0A9LocatableP", "lexicalParent"]
- !private ["6Source0A9LocatableP", "members"]
- !private ["6Source0A9LocatableP", "parameterList"]
- !private ["6Source0A9LocatableP", "pattern"]
- !private ["6Source0A9LocatableP", "replaceArgument"]
- !private ["6Source0A9LocatableP", "replaceBody"]
- !private ["6Source0A9LocatableP", "replaceCase"]
- !private ["6Source0A9LocatableP", "replaceCatchClause"]
- !private ["6Source0A9LocatableP", "replaceCollection"]
- !private ["6Source0A9LocatableP", "replaceCondition"]
- !private ["6Source0A9LocatableP", "replaceElement"]
- !private ["6Source0A9LocatableP", "replaceExpression"]
- !private ["6Source0A9LocatableP", "replaceInitialize"]
- !private ["6Source0A9LocatableP", "replaceMember"]
- !private ["6Source0A9LocatableP", "replaceParameter"]
- !private ["6Source0A9LocatableP", "replaceSignature"]
- !private ["6Source0A9LocatableP", "replaceStatement"]
- !private ["6Source0A9LocatableP", "replaceWhereClause"]
- !private ["6Source0A9LocatableP", "reset"]
- !private ["6Source0A9LocatableP", "setSourceRange"]
- !private ["6Source0A9LocatableP", "signature"]
- !private ["6Source0A9LocatableP", "sourceRange"]
- !private ["6Source0A9LocatableP", "statements"]
- !private ["6Source0A9LocatableP", "textDescription"]
- !private ["6Source0A5RangeV", "end"]
- !private ["6Source0A5RangeV", "start"]
- !private ["3AST9StatementP", "Case"]
- !private ["3AST9StatementP", "CatchClause"]
- !private ["3AST9StatementP", "Element"]
- !private ["3AST9StatementP", "InitializerMember"]
- !private ["3AST9StatementP", "MethodMember"]
- !private ["3AST9StatementP", "SubscriptMember"]
- !private ["3AST9StatementP", "argumentClause"]
- !private ["3AST9StatementP", "arguments"]
- !private ["3AST9StatementP", "body"]
- !private ["3AST9StatementP", "cases"]
- !private ["3AST9StatementP", "catchClauses"]
- !private ["3AST9StatementP", "collection"]
- !private ["3AST9StatementP", "conditionExpression"]
- !private ["3AST9StatementP", "conditionList"]
- !private ["3AST9StatementP", "elementList"]
- !private ["3AST9StatementP", "elements"]
- !private ["3AST9StatementP", "expression"]
- !private ["3AST9StatementP", "init"]
- !private ["3AST9StatementP", "initializerList"]
- !private ["3AST9StatementP", "item"]
- !private ["3AST9StatementP", "kind"]
- !private ["3AST9StatementP", "lexicalParent"]
- !private ["3AST9StatementP", "members"]
- !private ["3AST9StatementP", "parameterList"]
- !private ["3AST9StatementP", "replaceArgument"]
- !private ["3AST9StatementP", "replaceBody"]
- !private ["3AST9StatementP", "replaceCase"]
- !private ["3AST9StatementP", "replaceCatchClause"]
- !private ["3AST9StatementP", "replaceCollection"]
- !private ["3AST9StatementP", "replaceCondition"]
- !private ["3AST9StatementP", "replaceElement"]
- !private ["3AST9StatementP", "replaceExpression"]
- !private ["3AST9StatementP", "replaceInitialize"]
- !private ["3AST9StatementP", "replaceMember"]
- !private ["3AST9StatementP", "replaceParameter"]
- !private ["3AST9StatementP", "replaceSignature"]
- !private ["3AST9StatementP", "replaceStatement"]
- !private ["3AST9StatementP", "replaceWhereClause"]
- !private ["3AST9StatementP", "reset"]
- !private ["3AST9StatementP", "setSourceRange"]
- !private ["3AST9StatementP", "signature"]
- !private ["3AST9StatementP", "sourceRange"]
- !private ["3AST9StatementP", "statements"]
- !private ["s12StaticStringV", "init"]
- !private ["SS", "init"]
- !private ["s14StringProtocolP", "init"]
- !private ["3AST17SubscriptArgumentV", "expression"]
- !private ["3AST17SubscriptArgumentV", "identifier"]
- !private ["3AST17SubscriptArgumentV", "init"]
- !private ["3AST20SubscriptDeclarationC", "parameterList"]
- !private ["3AST20SubscriptDeclarationC", "replaceParameter"]
- !private ["3AST19SubscriptExpressionC", "arguments"]
- !private ["3AST19SubscriptExpressionC", "replaceArgument"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "attributes"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "genericParameter"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "genericWhere"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "getterSetterKeywordBlock"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "init"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "modifiers"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "parameterList"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "resultAttributes"]
- !private ["3AST19ProtocolDeclarationC15SubscriptMemberV", "resultType"]
- !private ["3AST20SuperclassExpressionC", "kind"]
- !private ["3AST20SuperclassExpressionC", "reset"]
- !private ["3AST15SwitchStatementC", "Case"]
- !private ["3AST15SwitchStatementC", "cases"]
- !private ["3AST15SwitchStatementC", "expression"]
- !private ["3AST15SwitchStatementC", "replaceCase"]
- !private ["3AST15SwitchStatementC", "replaceExpression"]
- !private ["3AST36TernaryConditionalOperatorExpressionC", "init"]
- !private ["3AST36TernaryConditionalOperatorExpressionC", "setSourceRange"]
- !private ["s16TextOutputStreamP", "init"]
- !private ["s20TextOutputStreamableP", "init"]
- !private ["3AST14ThrowStatementC", "expression"]
- !private ["3AST14ThrowStatementC", "replaceExpression"]
- !private ["3AST19TopLevelDeclarationC", "foldedSequenceExpression"]
- !private ["3AST19TopLevelDeclarationC", "replaceStatement"]
- !private ["3AST19TopLevelDeclarationC", "statements"]
- !private ["3AST21TryOperatorExpressionC", "kind"]
- !private ["3AST21TryOperatorExpressionC", "reset"]
- !private ["3AST15TupleExpressionC", "Element"]
- !private ["3AST15TupleExpressionC", "elementList"]
- !private ["3AST15TupleExpressionC", "replaceElement"]
- !private ["3AST4TypeP", "sourceRange"]
- !private ["3AST29TypeCastingOperatorExpressionC", "init"]
- !private ["3AST29TypeCastingOperatorExpressionC", "setSourceRange"]
- !private ["3AST19VariableDeclarationC", "body"]
- !private ["3AST19VariableDeclarationC", "replaceBody"]
- !private ["3AST14WhileStatementC", "conditionList"]
- !private ["3AST14WhileStatementC", "replaceCondition"]
- !private ["s14_ArrayProtocolP", "append"]
- !private ["s14_ArrayProtocolP", "contains"]
- !private ["s14_ArrayProtocolP", "count"]
- !private ["s14_ArrayProtocolP", "forEach"]
- !private ["s14_ArrayProtocolP", "indices"]
- !private ["s14_ArrayProtocolP", "last"]
- !private ["s14_ArrayProtocolP", "map"]
- !private ["s14_ArrayProtocolP", "removeLast"]
- !private ["s14_ArrayProtocolP", "subscript"]
- !private ["s23_BidirectionalIndexableP", "append"]
- !private ["s23_BidirectionalIndexableP", "contains"]
- !private ["s23_BidirectionalIndexableP", "count"]
- !private ["s23_BidirectionalIndexableP", "forEach"]
- !private ["s23_BidirectionalIndexableP", "indices"]
- !private ["s23_BidirectionalIndexableP", "init"]
- !private ["s23_BidirectionalIndexableP", "last"]
- !private ["s23_BidirectionalIndexableP", "map"]
- !private ["s23_BidirectionalIndexableP", "removeLast"]
- !private ["s23_BidirectionalIndexableP", "subscript"]
- !private ["s24_DestructorSafeContainerP", "append"]
- !private ["s24_DestructorSafeContainerP", "contains"]
- !private ["s24_DestructorSafeContainerP", "count"]
- !private ["s24_DestructorSafeContainerP", "forEach"]
- !private ["s24_DestructorSafeContainerP", "indices"]
- !private ["s24_DestructorSafeContainerP", "last"]
- !private ["s24_DestructorSafeContainerP", "map"]
- !private ["s24_DestructorSafeContainerP", "removeLast"]
- !private ["s24_DestructorSafeContainerP", "subscript"]
- !private ["s35_ExpressibleByBuiltinBooleanLiteralP", "_getBuiltinLogicValue"]
- !private ["s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP", "init"]
- !private ["s34_ExpressibleByBuiltinStringLiteralP", "init"]
- !private ["s39_ExpressibleByBuiltinUTF16StringLiteralP", "init"]
- !private ["s41_ExpressibleByBuiltinUnicodeScalarLiteralP", "init"]
- !private ["s33_ExpressibleByStringInterpolationP", "init"]
- !private ["s35_HasCustomAnyHashableRepresentationP", "init"]
- !private ["s10_IndexableP", "append"]
- !private ["s10_IndexableP", "contains"]
- !private ["s10_IndexableP", "count"]
- !private ["s10_IndexableP", "forEach"]
- !private ["s10_IndexableP", "indices"]
- !private ["s10_IndexableP", "init"]
- !private ["s10_IndexableP", "last"]
- !private ["s10_IndexableP", "map"]
- !private ["s10_IndexableP", "removeLast"]
- !private ["s10_IndexableP", "subscript"]
- !private ["s14_IndexableBaseP", "append"]
- !private ["s14_IndexableBaseP", "contains"]
- !private ["s14_IndexableBaseP", "count"]
- !private ["s14_IndexableBaseP", "forEach"]
- !private ["s14_IndexableBaseP", "indices"]
- !private ["s14_IndexableBaseP", "init"]
- !private ["s14_IndexableBaseP", "last"]
- !private ["s14_IndexableBaseP", "map"]
- !private ["s14_IndexableBaseP", "removeLast"]
- !private ["s14_IndexableBaseP", "subscript"]
- !private ["10Foundation27_KeyValueCodingAndObservingP", "init"]
- !private ["s17_MutableIndexableP", "append"]
- !private ["s17_MutableIndexableP", "contains"]
- !private ["s17_MutableIndexableP", "count"]
- !private ["s17_MutableIndexableP", "forEach"]
- !private ["s17_MutableIndexableP", "indices"]
- !private ["s17_MutableIndexableP", "last"]
- !private ["s17_MutableIndexableP", "map"]
- !private ["s17_MutableIndexableP", "removeLast"]
- !private ["s17_MutableIndexableP", "subscript"]
- !private ["s21_ObjectiveCBridgeableP", "_getBuiltinLogicValue"]
- !private ["s21_ObjectiveCBridgeableP", "append"]
- !private ["s21_ObjectiveCBridgeableP", "contains"]
- !private ["s21_ObjectiveCBridgeableP", "count"]
- !private ["s21_ObjectiveCBridgeableP", "forEach"]
- !private ["s21_ObjectiveCBridgeableP", "indices"]
- !private ["s21_ObjectiveCBridgeableP", "init"]
- !private ["s21_ObjectiveCBridgeableP", "last"]
- !private ["s21_ObjectiveCBridgeableP", "map"]
- !private ["s21_ObjectiveCBridgeableP", "removeLast"]
- !private ["s21_ObjectiveCBridgeableP", "subscript"]
- !private ["s22_RandomAccessIndexableP", "append"]
- !private ["s22_RandomAccessIndexableP", "contains"]
- !private ["s22_RandomAccessIndexableP", "count"]
- !private ["s22_RandomAccessIndexableP", "forEach"]
- !private ["s22_RandomAccessIndexableP", "indices"]
- !private ["s22_RandomAccessIndexableP", "last"]
- !private ["s22_RandomAccessIndexableP", "map"]
- !private ["s22_RandomAccessIndexableP", "removeLast"]
- !private ["s22_RandomAccessIndexableP", "subscript"]
- !private ["s26_RangeReplaceableIndexableP", "append"]
- !private ["s26_RangeReplaceableIndexableP", "contains"]
- !private ["s26_RangeReplaceableIndexableP", "count"]
- !private ["s26_RangeReplaceableIndexableP", "forEach"]
- !private ["s26_RangeReplaceableIndexableP", "indices"]
- !private ["s26_RangeReplaceableIndexableP", "init"]
- !private ["s26_RangeReplaceableIndexableP", "last"]
- !private ["s26_RangeReplaceableIndexableP", "map"]
- !private ["s26_RangeReplaceableIndexableP", "removeLast"]
- !private ["s26_RangeReplaceableIndexableP", "subscript"]
- !private ["s16_SwiftStringViewP", "init"]
depends-nominal:
- !private "3AST7ASTNodeC"
- !private "3AST14ASTNodeContextP"
- "3AST20ASTTextRepresentableP"
- !private "3AST7ASTUnitP"
- "3AST10ASTVisitorP"
- "3AST22FunctionCallExpressionC8ArgumentO"
- !private "Sa"
- !private "3AST28AssignmentOperatorExpressionC"
- !private "s23BidirectionalCollectionP"
- !private "3AST16BinaryExpressionP"
- !private "3AST24BinaryOperatorExpressionC"
- "3AST19VariableDeclarationC4BodyO"
- !private "Sb"
- !private "s7CVarArgP"
- "3AST15SwitchStatementC4CaseO"
- !private "3AST11DoStatementC11CatchClauseV"
- !private "3AST17ClosureExpressionC"
- !private "3AST9CodeBlockC"
- !private "s10CollectionP"
- !private "s10ComparableP"
- !private "3AST9ConditionO"
- !private "3AST19ConstantDeclarationC"
- !private "s28CustomDebugStringConvertibleP"
- !private "s29CustomPlaygroundQuickLookableP"
- !private "s17CustomReflectableP"
- "s23CustomStringConvertibleP"
- !private "3AST11DeclarationP"
- !private "s9DecodableP"
- !private "3AST15DictionaryEntryC"
- !private "3AST11DoStatementC"
- !private "3AST15TupleExpressionC7ElementV"
- !private "3AST18SequenceExpressionC7ElementO"
- !private "s9EncodableP"
- !private "s9EquatableP"
- !private "s25ExpressibleByArrayLiteralP"
- !private "s27ExpressibleByBooleanLiteralP"
- !private "s43ExpressibleByExtendedGraphemeClusterLiteralP"
- !private "s26ExpressibleByStringLiteralP"
- !private "s33ExpressibleByUnicodeScalarLiteralP"
- !private "3AST10ExpressionP"
- !private "3AST17ExpressionPatternC"
- !private "3AST14ForInStatementC"
- !private "3AST22FunctionCallExpressionC"
- !private "3AST19FunctionDeclarationC"
- !private "3AST17FunctionSignatureV"
- !private "3AST14GuardStatementC"
- !private "s8HashableP"
- !private "3AST11IfStatementC"
- !private "3AST22InitializerDeclarationC"
- !private "3AST19ProtocolDeclarationC17InitializerMemberV"
- !private "3AST14ForInStatementC4ItemV"
- !private "3AST15SwitchStatementC4CaseO4ItemV"
- "3AST14SelfExpressionC4KindO"
- "3AST17LiteralExpressionC4KindO"
- "3AST20SuperclassExpressionC4KindO"
- "3AST21TryOperatorExpressionC4KindO"
- !private "3AST29TypeCastingOperatorExpressionC4KindO"
- !private "3AST17LiteralExpressionC"
- !private "3AST13LocatableNodeC"
- !private "s25LosslessStringConvertibleP"
- "3AST19ProtocolDeclarationC6MemberO"
- !private "3AST19ProtocolDeclarationC12MethodMemberV"
- !private "s10MirrorPathP"
- !private "s17MutableCollectionP"
- !private "So8NSCodingP"
- !private "So9NSCopyingP"
- !private "So21NSItemProviderReadingP"
- !private "So21NSItemProviderWritingP"
- !private "So16NSMutableCopyingP"
- !private "So16NSObjectProtocolP"
- !private "So14NSSecureCodingP"
- !private "So8NSStringC"
- !private "3AST17FunctionSignatureV9ParameterV"
- !private "3AST23ParenthesizedExpressionC"
- !private "3AST7PatternP"
- !private "3AST11PatternBaseC"
- !private "3AST18PatternInitializerV"
- !private "3AST17PostfixExpressionP"
- !private "3AST17PrimaryExpressionP"
- !private "3AST19ProtocolDeclarationC"
- !private "s22RandomAccessCollectionP"
- !private "s26RangeReplaceableCollectionP"
- !private "3AST20RepeatWhileStatementC"
- !private "3AST15ReturnStatementC"
- !private "3AST14SelfExpressionC"
- !private "s8SequenceP"
- !private "3AST18SequenceExpressionC"
- "4Sema25SequenceExpressionFoldingV"
- !private "6Source0A9LocatableP"
- !private "6Source0A5RangeV"
- !private "3AST9StatementP"
- !private "s12StaticStringV"
- !private "SS"
- !private "s14StringProtocolP"
- !private "3AST17SubscriptArgumentV"
- !private "3AST20SubscriptDeclarationC"
- !private "3AST19SubscriptExpressionC"
- !private "3AST19ProtocolDeclarationC15SubscriptMemberV"
- !private "3AST20SuperclassExpressionC"
- !private "3AST15SwitchStatementC"
- !private "3AST36TernaryConditionalOperatorExpressionC"
- !private "s16TextOutputStreamP"
- !private "s20TextOutputStreamableP"
- !private "3AST14ThrowStatementC"
- !private "3AST19TopLevelDeclarationC"
- !private "3AST21TryOperatorExpressionC"
- !private "3AST15TupleExpressionC"
- !private "3AST4TypeP"
- !private "3AST29TypeCastingOperatorExpressionC"
- !private "3AST19VariableDeclarationC"
- !private "3AST14WhileStatementC"
- !private "s14_ArrayProtocolP"
- !private "s23_BidirectionalIndexableP"
- !private "s24_DestructorSafeContainerP"
- !private "s35_ExpressibleByBuiltinBooleanLiteralP"
- !private "s51_ExpressibleByBuiltinExtendedGraphemeClusterLiteralP"
- !private "s34_ExpressibleByBuiltinStringLiteralP"
- !private "s39_ExpressibleByBuiltinUTF16StringLiteralP"
- !private "s41_ExpressibleByBuiltinUnicodeScalarLiteralP"
- !private "s33_ExpressibleByStringInterpolationP"
- !private "s35_HasCustomAnyHashableRepresentationP"
- !private "s10_IndexableP"
- !private "s14_IndexableBaseP"
- !private "10Foundation27_KeyValueCodingAndObservingP"
- !private "s17_MutableIndexableP"
- !private "s21_ObjectiveCBridgeableP"
- !private "s22_RandomAccessIndexableP"
- !private "s26_RangeReplaceableIndexableP"
- !private "s16_SwiftStringViewP"
depends-dynamic-lookup:
depends-external:
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/Dispatch.apinotesc"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/ObjectiveC.swiftmodule"
- "/Users/sara/Developer/CDSwiftAST/.build/x86_64-apple-macosx10.10/debug/AST.swiftmodule"
- "/Users/sara/Developer/CDSwiftAST/.build/x86_64-apple-macosx10.10/debug/Source.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/Dispatch.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/Darwin.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/Foundation.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/CoreFoundation.swiftmodule"
- "/Users/sara/Developer/CDSwiftAST/.build/x86_64-apple-macosx10.10/debug/Bocho.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/CoreGraphics.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/Swift.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/IOKit.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/swift/macosx/x86_64/SwiftOnoneSupport.swiftmodule"
- "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/objc/ObjectiveC.apinotes"
- "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/usr/include/Darwin.apinotes"
- "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks/Foundation.framework/Headers/Foundation.apinotes"
- "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks/CoreGraphics.framework/Headers/CoreGraphics.apinotes"
- "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.13.sdk/System/Library/Frameworks/CoreText.framework/Headers/CoreText.apinotes"
interface-hash: "0675f5c10acb3c48fbdd4638b7a80e2d"
